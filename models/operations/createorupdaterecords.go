// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"openapi/models/components"
)

type CreateOrUpdateRecordsRequest struct {
	// x-collaboration
	XCollaboration *string `header:"style=simple,explode=false,name=x-collaboration"`
	// Skip duplicates when updating records with the same value.
	Skipdupes *bool `queryParam:"style=form,explode=true,name=skipdupes"`
	// Tenant Id
	DataPartitionID string              `header:"style=simple,explode=false,name=data-partition-id"`
	RequestBody     []components.Record `request:"mediaType=application/json"`
}

func (o *CreateOrUpdateRecordsRequest) GetXCollaboration() *string {
	if o == nil {
		return nil
	}
	return o.XCollaboration
}

func (o *CreateOrUpdateRecordsRequest) GetSkipdupes() *bool {
	if o == nil {
		return nil
	}
	return o.Skipdupes
}

func (o *CreateOrUpdateRecordsRequest) GetDataPartitionID() string {
	if o == nil {
		return ""
	}
	return o.DataPartitionID
}

func (o *CreateOrUpdateRecordsRequest) GetRequestBody() []components.Record {
	if o == nil {
		return []components.Record{}
	}
	return o.RequestBody
}

type CreateOrUpdateRecordsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Records created and/or updated successfully.
	CreateUpdateRecordsResponse *components.CreateUpdateRecordsResponse
}

func (o *CreateOrUpdateRecordsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateOrUpdateRecordsResponse) GetCreateUpdateRecordsResponse() *components.CreateUpdateRecordsResponse {
	if o == nil {
		return nil
	}
	return o.CreateUpdateRecordsResponse
}
