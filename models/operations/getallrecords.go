// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"openapi/models/components"
)

type GetAllRecordsRequest struct {
	// x-collaboration
	XCollaboration *string `header:"style=simple,explode=false,name=x-collaboration"`
	// Cursor
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// Page Size
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter Kind
	Kind string `queryParam:"style=form,explode=true,name=kind"`
	// Tenant Id
	DataPartitionID string `header:"style=simple,explode=false,name=data-partition-id"`
}

func (o *GetAllRecordsRequest) GetXCollaboration() *string {
	if o == nil {
		return nil
	}
	return o.XCollaboration
}

func (o *GetAllRecordsRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *GetAllRecordsRequest) GetLimit() *int {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *GetAllRecordsRequest) GetKind() string {
	if o == nil {
		return ""
	}
	return o.Kind
}

func (o *GetAllRecordsRequest) GetDataPartitionID() string {
	if o == nil {
		return ""
	}
	return o.DataPartitionID
}

type GetAllRecordsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Record Ids retrieved successfully.
	DatastoreQueryResult *components.DatastoreQueryResult
}

func (o *GetAllRecordsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetAllRecordsResponse) GetDatastoreQueryResult() *components.DatastoreQueryResult {
	if o == nil {
		return nil
	}
	return o.DatastoreQueryResult
}
